basePath: /api
definitions:
  models.CreateGuildInput:
    properties:
      avatar:
        type: string
      banner:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  pgtype.InfinityModifier:
    enum:
    - 1
    - 0
    - -1
    type: integer
    x-enum-varnames:
    - Infinity
    - Finite
    - NegativeInfinity
  pgtype.Text:
    properties:
      string:
        type: string
      valid:
        type: boolean
    type: object
  pgtype.Timestamp:
    properties:
      infinityModifier:
        $ref: '#/definitions/pgtype.InfinityModifier'
      time:
        description: Time zone will be ignored when encoding to PostgreSQL.
        type: string
      valid:
        type: boolean
    type: object
  sql.Guild:
    properties:
      avatar:
        $ref: '#/definitions/pgtype.Text'
      banner:
        $ref: '#/definitions/pgtype.Text'
      created:
        $ref: '#/definitions/pgtype.Timestamp'
      id:
        type: string
      modified:
        $ref: '#/definitions/pgtype.Timestamp'
      name:
        type: string
    type: object
  validation.ErrorResponse:
    properties:
      actual: {}
      expected:
        type: string
      field:
        type: string
    type: object
host: localhost:8000
info:
  contact:
    email: hello@kvd.studio
    name: KVD Studio
    url: https://kvd.studio
  title: Fastcord
  version: 0.1.0
paths:
  /guilds:
    get:
      consumes:
      - application/json
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/validation.ErrorResponse'
      summary: List all guilds
      tags:
      - guild
    post:
      consumes:
      - application/json
      parameters:
      - description: Guild details
        in: body
        name: guild
        required: true
        schema:
          $ref: '#/definitions/models.CreateGuildInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/sql.Guild'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/validation.ErrorResponse'
      summary: Create guild
      tags:
      - guild
swagger: "2.0"
