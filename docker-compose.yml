name: fastcord

volumes:
  db-data:
  venv-data:

services:
  api:
    build: ./api
    image: kvdomingo/fastcord-api
    restart: unless-stopped
    init: true
    environment:
      POSTGRESQL_USERNAME: postgres
      POSTGRESQL_PASSWORD: postgres
      POSTGRESQL_DATABASE: postgres
      POSTGRESQL_HOST: db
      POSTGRESQL_PORT: 5432
      STYTCH_PROJECT_ID: ${STYTCH_PROJECT_ID}
      STYTCH_SECRET: ${STYTCH_SECRET}
      STYTCH_PUBLIC_TOKEN: ${STYTCH_PUBLIC_TOKEN}
      STYTCH_ENVIRONMENT: ${STYTCH_ENVIRONMENT}
      SECRET_KEY: ${SECRET_KEY}
    volumes:
      - ./api:/app
      - venv-data:/app/.venv
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/api/health" ]
      interval: 20s
      start_interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - '8000:8000'

  ui:
    image: oven/bun:1.2
    restart: unless-stopped
    init: true
    environment:
      NODE_ENV: development
    working_dir: /app
    volumes:
      - ./ui:/app
    entrypoint:
      - /bin/bash
      - -euxo
      - pipefail
      - -c
      - bun install && exec bun run dev
    ports:
      - '3000:3000'

  db:
    image: ghcr.io/kvdomingo/postgresql-pig:17
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 20s
      timeout: 5s
      retries: 3
    ports:
      - '5432:5432'
